name: CI

on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Tải playit.gg Agent
      run: |
        try {
          Invoke-WebRequest -Uri "https://github.com/playit-cloud/playit-agent/releases/download/v0.15.0/playit-windows-x86_64.exe" -OutFile "playit.exe" -ErrorAction Stop
        } catch {
          Write-Error "Tải playit.gg agent thất bại. Vui lòng kiểm tra URL tại https://github.com/playit-cloud/playit-agent/releases hoặc https://playit.gg/download."
          exit 1
        }
      shell: powershell

    - name: Di chuyển file thực thi playit
      run: |
        New-Item -ItemType Directory -Path ".\playit" -Force
        Move-Item -Path "playit.exe" -Destination ".\playit\playit.exe" -Force
      shell: powershell
      continue-on-error: true

    - name: Kiểm tra playit.gg Agent
      run: |
        Write-Output "Kiểm tra file playit.exe..."
        if (Test-Path ".\playit\playit.exe") {
          Write-Output "File playit.exe tồn tại."
          Write-Output "Kiểm tra phiên bản playit.gg agent..."
          .\playit\playit.exe --version
          Write-Output "Các lệnh khả dụng:"
          .\playit\playit.exe --help
        } else {
          Write-Error "File playit.exe không tồn tại trong thư mục playit."
          exit 1
        }
      shell: powershell
      continue-on-error: true

    - name: Xác thực và khởi động Tunnel
      run: |
        try {
          Write-Output "Khởi động playit.gg agent với xác thực..."
          Start-Job -Name PlayitJob -ScriptBlock {
            $env:PLAYIT_SECRET_KEY = "${{ secrets.PLAYIT_SECRET_KEY }}"
            Start-Process -FilePath ".\playit\playit.exe" -ArgumentList "--secret $env:PLAYIT_SECRET_KEY run" -NoNewWindow -RedirectStandardOutput "tunnel_output.txt" -RedirectStandardError "tunnel_error.txt"
          } | Out-Null
          Start-Sleep -Seconds 20
          Write-Output "Kiểm tra trạng thái job..."
          $job = Get-Job -Name PlayitJob
          Write-Output "Trạng thái job: $($job.State)"
          Write-Output "Đầu ra tunnel:"
          Get-Content tunnel_output.txt -ErrorAction SilentlyContinue
          Write-Output "Lỗi tunnel (nếu có):"
          Get-Content tunnel_error.txt -ErrorAction SilentlyContinue
          if (Test-Path "tunnel_output.txt") {
            $output = Get-Content tunnel_output.txt -Raw -ErrorAction SilentlyContinue
            if ($output -match "tunnel running") {
              Write-Output "Tunnel khởi động thành công."
            } else {
              Write-Error "Tunnel không khởi động đúng. Kiểm tra tunnel_error.txt."
              exit 1
            }
          } else {
            Write-Error "Không tìm thấy tunnel_output.txt. Tunnel có thể không khởi động."
            exit 1
          }
        } catch {
          Write-Error "Tạo tunnel thất bại: $_"
          Get-Content tunnel_error.txt -ErrorAction SilentlyContinue
          exit 1
        }
      shell: powershell
      env:
        PLAYIT_SECRET_KEY: ${{ secrets.PLAYIT_SECRET_KEY }}

    - name: Bật Terminal Services
      run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -Value 0

    - name: Bật quy tắc tường lửa Remote Desktop
      run: Enable-NetFirewallRule -DisplayGroup "Remote Desktop"

    - name: Cấu hình bảo mật RDP
      run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1

    - name: Đặt mật khẩu người dùng cục bộ
      run: Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)
